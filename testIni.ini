[input]
2DMapOutput                   =           # Output file from FM2D model (.net file)
CrossSectionLocationFile      =           # .csv or .txt file (, as delimiter) that contains four columns: X_coordinate,Y_coordinate,BranchName,Length,Chainage.
RegionPolygonFile             =           # User defined polygons in json format
SectionPolygonFile            =           # User defined polygons in json format

[parameters]
CaseName                      =           # Subdirectory name under OutputDir (no space); if not specified, 'CaseXX' (01, 02..) are used
MaximumPointsInProfile        = 20        # Number of points which are used to generate cross-sections
ConveyanceDetectionMethod     = 1         # [0] method based on mean flow velocity, [1] method based on maximum flow velocity (default)
AbsoluteVelocityThreshold     = 0.1       # Absolute velocity threshold in m/s. Used to determine storage
RelativeVelocityThreshold     = 0.15      # Relative velocity threshold (percentage). Used to determine storage
MinimumDepthThreshold         = 0.02      # Minimum depth (m) for storage identification
BedlevelCriterium             = 0.05      # Ignore the lowest percentage of bed level points
LakeTimesteps                 = 10        # Number of timesteps that are used for identifying lakes
ExtrapolateStorage            = True      # Add storage to water level independent cross-section section
SDCorrection                  = True      # Use summerdike volume correction
SDFloodplainBase              = 0.5       # minimum distance between floodplain base level and crest level in meters
SDTransitionHeight            = 0.5       # Transition height at the summer dike (m)
SDOptimisationMethod          = 0         # [0] Optimise on Total volume, [1] optimise  on flow volume, [2] optimise on both
FrictionWeighingMethod        = 0         # Options. [0] arithmetric mean, [1] Weighted average
SkipMaps                      = 0         # number of timesteps to skip at begin of 2D output. Use to skip problems related to initial conditions. 
ClassificationMethod          = 0         # How to classify 2D output using Section and Region polygons. Options: [0] Do not classify regions or sections. [1] Use DeltaShell
MinimumTotalWidth             = 0.5       # Minimum width in meters. Zero width may lead to numerical instability in 1D solvers

[debug]
ExportCSSData                 = False     # If True, exports pickled (1) input data for cross-section object, (2) flow mask for conveyance/storage.
ExportMapFiles                = False     # Export detailed map output. Only use for small models or limited number of cross-sections b/c output can be huge.
CssSelection                  =           # provide comma separated list of ints; e.g. 38, 39, 40. Leave empty to generate all cross-sections

[output]
OutputDirectory               = output    # Output files are saved in OutputDir/CaseName; if not specified, subdirectory is created in the current directory

