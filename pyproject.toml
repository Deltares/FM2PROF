[tool.poetry]
name = "fm2prof"
version = "2.1.2"
description = "Package use to reduce Delft3D FM models from 2D models to 1D models"
authors = ["K.D. Berends <koen.berends@deltares.nl>"]
maintainers = ["Carles S. Soriano Perez <carles.sorianoperez@deltares.nl>"]
license = "GNU LGPL"
packages = [
  { include = "fm2prof" },
]

[tool.poetry.dependencies]
python = "^3.7.1, <3.10"
seaborn = "^0.7"
pandas = "^1.3.4"
numpy = "^1.14"
netCDF4 = "1.5"
scipy = "^1.0"
scikit-learn = "^0.19.0"
geojson = "^2.4.1"
Shapely = "^1.8.0"
click = "^8.0.3"
matplotlib = "^3.5.0"
geos = "^0.2.3"
Cython = "^0.29.24"
sphinxcontrib-images = "^0.9.4"
sphinx_materialdesign_theme = "^0.1.11"
sphinx-immaterial = "^0.7.3"
sphinxcontrib-details-directive = "^0.1.0"
typer = "^0.4.1"
sphinxcontrib-programoutput = "^0.17"
tqdm = "^4.64.0"


[tool.poetry.dev-dependencies]
pytest = "^6.2.5"
pytest-cov = "^3.0.0"
black = "22.3.0"
isort = "^5.10.1"
Sphinx = { version = "^4.3.1", optional = true }
sphinxcontrib-images = {version = "^0.9.4", optional = true}
sphinx_materialdesign_theme = {version = "^0.1.11", optional = true}
commitizen = "^2.20.0"
pre-commit = "^2.15.0"
poetry2conda = "^0.3.0"
pyinstaller = "^5.1"
tuna = "^0.5.11"

[tool.poetry.scripts]
f2p="fm2prof.cli:main"
fm2prof="fm2prof.cli:main"

[tool.commitizen]
name = "cz_conventional_commits"
changelog_file = "docs/CHANGELOG.rst"
update_changelog_on_bump = true
version = "2.1.2"
tag_format = "v$major.$minor.$patch"
version_files = [
    "fm2prof/__init__.py",
    "pyproject.toml:version"
]

[tool.commitizen.custommize]
bump_pattern = "^(break|new|fix|hotfix|refactor|docs)"
bump_map = {"break" = "MAJOR", "new" = "MINOR", "fix" = "PATCH", "hotfix" = "PATCH", "refactor"="PATCH", "docs" = "PATCH"}

[tool.coverage.run]
omit = [
    "test/*",
    "docs/*"
    ]

[tool.black]
line-length = 88
target-version = ['py37', 'py38']
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | \.virtualenvs
  )/
)
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[build-system]
requires = ["poetry-core>=1.0.4"]
build-backend = "poetry.core.masonry.api"

[tool.poetry2conda.dependencies]
pandas = { channel = "conda-forge" }
netCDF4 = { channel = "conda-forge" }
shapely = { channel = "conda-forge" }
geos = {channel = "conda-forge"}

[tool.poetry.extras]
docs = ["Sphinx", "sphinx_materialdesign_theme", "sphinxcontrib-images"]